unit CustomCombo.Item;

interface

uses
  CustomCombo.Interfaces, FMX.StdCtrls, FMX.Types, FMX.Edit,
  CustomCombo.Content, FMX.Objects;

type
  TCustomComboItem = class(TInterfacedObject, ICustomComboItem)
    procedure ClickItem(Sender: TObject);
  private
    FInstance : TCustomComboContent;
    FMouseOn : Boolean;
    function GetItemPropertys(aItem: TRectangle; aText: String): TRectangle;
    procedure DefText(aParent: TFMXObject; aText: String);
  public
    constructor Create(aContent: TCustomComboContent);
    destructor Destroy; override;
    function Item(aText: String): TRectangle;
  end;

implementation

uses
  System.UITypes, FMX.Dialogs;

{ TCustomComboItem }

procedure TCustomComboItem.ClickItem(Sender: TObject);
begin
  FInstance.GetFieldInstance.Text:= (Sender as TTExt).Text;
  FInstance.ContainerControl(False);
end;

constructor TCustomComboItem.Create(aContent: TCustomComboContent);
begin
 FInstance := aContent;
end;

procedure TCustomComboItem.DefText(aParent: TFMXObject; aText: String);
var
  TagText: TText;
begin
 TagText := TText.Create(nil);

 with TagText do begin
   Text := aText;
   TextSettings.FontColor := $FFFFFFFF;
   Parent := aParent;
   TextSettings.HorzAlign := TTextAlign.Leading;
   Align := TAlignLayout.Client;
   OnClick := ClickItem;
 end;
end;

destructor TCustomComboItem.Destroy;
begin

  inherited;
end;

function TCustomComboItem.GetItemPropertys(aItem: TRectangle; aText: String)
  : TRectangle;
begin
  with aItem do
  begin
    Stroke.Thickness := 0;
    Height := 30;
    Align := TAlignLayout.Top;
    Margins.Left := 10;
    Margins.Right := 10;
    Fill.Color := 0;
    Cursor := crHandPoint;
  end;
  DefText(aItem, aText);

  Result := aItem;
end;

function TCustomComboItem.Item(aText: String): TRectangle;
begin
  Result := GetItemPropertys(TRectangle.Create(nil), aText);
end;

end.
