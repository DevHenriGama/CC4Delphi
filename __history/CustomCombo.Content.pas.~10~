unit CustomCombo.Content;

interface

uses
  FMX.Objects, CustomCombo.Interfaces, FMX.Layouts,
  CustomCombo.Container, FMX.Edit, System.Classes;

type
  TCustomComboContent = class(TInterfacedObject, ICustomComboContent)
    procedure MouseExit(Sender: TObject);
  private
    FContainer: TCustomComboContainer;
    FListContent: TVertScrollBox;
    FItem: ICustomComboItem;
    FListItem: TStringList;
    procedure Initialize;
    procedure Clear;
  public
    constructor Create(aInstance: TCustomComboContainer);
    destructor Destroy; override;
    procedure populateList;

  end;

implementation

uses
  FMX.Types, CustomCombo.Item, FMX.Dialogs, System.SysUtils;

{ TCustomComboContent }

procedure TCustomComboContent.Clear;
var
  I: Integer;
  aCount: Integer;
begin
  aCount := FListContent.Content.ChildrenCount;

  if aCount = 0 then
    Exit;

  FListContent.BeginUpdate;
  try
    for I := Pred(aCount) downto 0 do
    begin
      if FListContent.Content.Children[I] is TRectangle then
        TRectangle(FListContent.Content.Children[I]).DisposeOf;
    end;
  finally
    FListContent.EndUpdate;
  end;

end;

constructor TCustomComboContent.Create(aInstance: TCustomComboContainer);
begin
  FContainer := aInstance;
  FListContent := TVertScrollBox.Create(nil);
  FListContent.OnMouseLeave := MouseExit;
  FItem := TCustomComboItem.Create(Self);
  Initialize;

end;

destructor TCustomComboContent.Destroy;
begin

  inherited;
end;


procedure TCustomComboContent.Initialize;
begin
  with FListContent do
  begin
   // Parent := FInstance.GetContainer;
    Align := TAlignLayout.Client;
  end;

end;

procedure TCustomComboContent.MouseExit(Sender: TObject);
begin

end;

procedure TCustomComboContent.populateList;
var
  I: Integer;
begin
  Clear;

  if not Assigned(FListItem) then
    Exit;

  if FListContent.Content.ChildrenCount = 0 then
  begin
    for I := 0 to Pred(FListItem.Count) do
      FListContent.AddObject(FItem.Item(FListItem[I]));
  end
  else
  begin
   // FInstance.ContainerVisibility(True);
  end;

end;

end.
